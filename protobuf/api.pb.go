// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{0}
}
func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (dst *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(dst, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRes) Reset()         { *m = LoginRes{} }
func (m *LoginRes) String() string { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()    {}
func (*LoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{1}
}
func (m *LoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRes.Unmarshal(m, b)
}
func (m *LoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRes.Marshal(b, m, deterministic)
}
func (dst *LoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRes.Merge(dst, src)
}
func (m *LoginRes) XXX_Size() int {
	return xxx_messageInfo_LoginRes.Size(m)
}
func (m *LoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRes proto.InternalMessageInfo

func (m *LoginRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AddInvoiceReq struct {
	Memo                 string   `protobuf:"bytes,1,opt,name=memo,proto3" json:"memo,omitempty"`
	Amount               uint32   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddInvoiceReq) Reset()         { *m = AddInvoiceReq{} }
func (m *AddInvoiceReq) String() string { return proto.CompactTextString(m) }
func (*AddInvoiceReq) ProtoMessage()    {}
func (*AddInvoiceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{2}
}
func (m *AddInvoiceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInvoiceReq.Unmarshal(m, b)
}
func (m *AddInvoiceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInvoiceReq.Marshal(b, m, deterministic)
}
func (dst *AddInvoiceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInvoiceReq.Merge(dst, src)
}
func (m *AddInvoiceReq) XXX_Size() int {
	return xxx_messageInfo_AddInvoiceReq.Size(m)
}
func (m *AddInvoiceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInvoiceReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInvoiceReq proto.InternalMessageInfo

func (m *AddInvoiceReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *AddInvoiceReq) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type PayInvoiceReq struct {
	Invoice              string   `protobuf:"bytes,1,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Amount               uint32   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayInvoiceReq) Reset()         { *m = PayInvoiceReq{} }
func (m *PayInvoiceReq) String() string { return proto.CompactTextString(m) }
func (*PayInvoiceReq) ProtoMessage()    {}
func (*PayInvoiceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{3}
}
func (m *PayInvoiceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayInvoiceReq.Unmarshal(m, b)
}
func (m *PayInvoiceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayInvoiceReq.Marshal(b, m, deterministic)
}
func (dst *PayInvoiceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayInvoiceReq.Merge(dst, src)
}
func (m *PayInvoiceReq) XXX_Size() int {
	return xxx_messageInfo_PayInvoiceReq.Size(m)
}
func (m *PayInvoiceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PayInvoiceReq.DiscardUnknown(m)
}

var xxx_messageInfo_PayInvoiceReq proto.InternalMessageInfo

func (m *PayInvoiceReq) GetInvoice() string {
	if m != nil {
		return m.Invoice
	}
	return ""
}

func (m *PayInvoiceReq) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Btc struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Btc) Reset()         { *m = Btc{} }
func (m *Btc) String() string { return proto.CompactTextString(m) }
func (*Btc) ProtoMessage()    {}
func (*Btc) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{4}
}
func (m *Btc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Btc.Unmarshal(m, b)
}
func (m *Btc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Btc.Marshal(b, m, deterministic)
}
func (dst *Btc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Btc.Merge(dst, src)
}
func (m *Btc) XXX_Size() int {
	return xxx_messageInfo_Btc.Size(m)
}
func (m *Btc) XXX_DiscardUnknown() {
	xxx_messageInfo_Btc.DiscardUnknown(m)
}

var xxx_messageInfo_Btc proto.InternalMessageInfo

type Transactions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transactions) Reset()         { *m = Transactions{} }
func (m *Transactions) String() string { return proto.CompactTextString(m) }
func (*Transactions) ProtoMessage()    {}
func (*Transactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{5}
}
func (m *Transactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transactions.Unmarshal(m, b)
}
func (m *Transactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transactions.Marshal(b, m, deterministic)
}
func (dst *Transactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transactions.Merge(dst, src)
}
func (m *Transactions) XXX_Size() int {
	return xxx_messageInfo_Transactions.Size(m)
}
func (m *Transactions) XXX_DiscardUnknown() {
	xxx_messageInfo_Transactions.DiscardUnknown(m)
}

var xxx_messageInfo_Transactions proto.InternalMessageInfo

type Balance struct {
	Balance              uint32   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{6}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (dst *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(dst, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetBalance() uint32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type Invoices struct {
	Invoice              []string `protobuf:"bytes,1,rep,name=invoice,proto3" json:"invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invoices) Reset()         { *m = Invoices{} }
func (m *Invoices) String() string { return proto.CompactTextString(m) }
func (*Invoices) ProtoMessage()    {}
func (*Invoices) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ac07ff420b3c5fdc, []int{7}
}
func (m *Invoices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoices.Unmarshal(m, b)
}
func (m *Invoices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoices.Marshal(b, m, deterministic)
}
func (dst *Invoices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoices.Merge(dst, src)
}
func (m *Invoices) XXX_Size() int {
	return xxx_messageInfo_Invoices.Size(m)
}
func (m *Invoices) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoices.DiscardUnknown(m)
}

var xxx_messageInfo_Invoices proto.InternalMessageInfo

func (m *Invoices) GetInvoice() []string {
	if m != nil {
		return m.Invoice
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "api.LoginReq")
	proto.RegisterType((*LoginRes)(nil), "api.LoginRes")
	proto.RegisterType((*AddInvoiceReq)(nil), "api.AddInvoiceReq")
	proto.RegisterType((*PayInvoiceReq)(nil), "api.PayInvoiceReq")
	proto.RegisterType((*Btc)(nil), "api.Btc")
	proto.RegisterType((*Transactions)(nil), "api.Transactions")
	proto.RegisterType((*Balance)(nil), "api.Balance")
	proto.RegisterType((*Invoices)(nil), "api.Invoices")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LndHubServiceClient is the client API for LndHubService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LndHubServiceClient interface {
	GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateUser(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
}

type lndHubServiceClient struct {
	cc *grpc.ClientConn
}

func NewLndHubServiceClient(cc *grpc.ClientConn) LndHubServiceClient {
	return &lndHubServiceClient{cc}
}

func (c *lndHubServiceClient) GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.LndHubService/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubServiceClient) CreateUser(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.LndHubService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/api.LndHubService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LndHubServiceServer is the server API for LndHubService service.
type LndHubServiceServer interface {
	GetInfo(context.Context, *empty.Empty) (*empty.Empty, error)
	CreateUser(context.Context, *empty.Empty) (*empty.Empty, error)
	Login(context.Context, *LoginReq) (*LoginRes, error)
}

func RegisterLndHubServiceServer(s *grpc.Server, srv LndHubServiceServer) {
	s.RegisterService(&_LndHubService_serviceDesc, srv)
}

func _LndHubService_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubServiceServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubService/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubServiceServer).GetInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubServiceServer).CreateUser(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LndHubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.LndHubService",
	HandlerType: (*LndHubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _LndHubService_GetInfo_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _LndHubService_CreateUser_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _LndHubService_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// LndHubPrivateServiceClient is the client API for LndHubPrivateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LndHubPrivateServiceClient interface {
	GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	AddInvoice(ctx context.Context, in *AddInvoiceReq, opts ...grpc.CallOption) (*empty.Empty, error)
	PayInvoice(ctx context.Context, in *PayInvoiceReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetBtc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Btc, error)
	GetBalance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Balance, error)
	GetTxs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Transactions, error)
	GetUserInvoices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Invoices, error)
}

type lndHubPrivateServiceClient struct {
	cc *grpc.ClientConn
}

func NewLndHubPrivateServiceClient(cc *grpc.ClientConn) LndHubPrivateServiceClient {
	return &lndHubPrivateServiceClient{cc}
}

func (c *lndHubPrivateServiceClient) GetInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) AddInvoice(ctx context.Context, in *AddInvoiceReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/AddInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) PayInvoice(ctx context.Context, in *PayInvoiceReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/PayInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) GetBtc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Btc, error) {
	out := new(Btc)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/GetBtc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) GetBalance(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) GetTxs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Transactions, error) {
	out := new(Transactions)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/GetTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lndHubPrivateServiceClient) GetUserInvoices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Invoices, error) {
	out := new(Invoices)
	err := c.cc.Invoke(ctx, "/api.LndHubPrivateService/GetUserInvoices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LndHubPrivateServiceServer is the server API for LndHubPrivateService service.
type LndHubPrivateServiceServer interface {
	GetInfo(context.Context, *empty.Empty) (*empty.Empty, error)
	AddInvoice(context.Context, *AddInvoiceReq) (*empty.Empty, error)
	PayInvoice(context.Context, *PayInvoiceReq) (*empty.Empty, error)
	GetBtc(context.Context, *empty.Empty) (*Btc, error)
	GetBalance(context.Context, *empty.Empty) (*Balance, error)
	GetTxs(context.Context, *empty.Empty) (*Transactions, error)
	GetUserInvoices(context.Context, *empty.Empty) (*Invoices, error)
}

func RegisterLndHubPrivateServiceServer(s *grpc.Server, srv LndHubPrivateServiceServer) {
	s.RegisterService(&_LndHubPrivateService_serviceDesc, srv)
}

func _LndHubPrivateService_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).GetInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_AddInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInvoiceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).AddInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/AddInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).AddInvoice(ctx, req.(*AddInvoiceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_PayInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayInvoiceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).PayInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/PayInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).PayInvoice(ctx, req.(*PayInvoiceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_GetBtc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).GetBtc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/GetBtc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).GetBtc(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).GetBalance(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_GetTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).GetTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/GetTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).GetTxs(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LndHubPrivateService_GetUserInvoices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LndHubPrivateServiceServer).GetUserInvoices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LndHubPrivateService/GetUserInvoices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LndHubPrivateServiceServer).GetUserInvoices(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _LndHubPrivateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.LndHubPrivateService",
	HandlerType: (*LndHubPrivateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _LndHubPrivateService_GetInfo_Handler,
		},
		{
			MethodName: "AddInvoice",
			Handler:    _LndHubPrivateService_AddInvoice_Handler,
		},
		{
			MethodName: "PayInvoice",
			Handler:    _LndHubPrivateService_PayInvoice_Handler,
		},
		{
			MethodName: "GetBtc",
			Handler:    _LndHubPrivateService_GetBtc_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _LndHubPrivateService_GetBalance_Handler,
		},
		{
			MethodName: "GetTxs",
			Handler:    _LndHubPrivateService_GetTxs_Handler,
		},
		{
			MethodName: "GetUserInvoices",
			Handler:    _LndHubPrivateService_GetUserInvoices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_ac07ff420b3c5fdc) }

var fileDescriptor_api_ac07ff420b3c5fdc = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x5f, 0x6b, 0xd4, 0x40,
	0x14, 0xc5, 0x59, 0xe3, 0x26, 0xe9, 0xa5, 0x51, 0x1c, 0x4a, 0x5d, 0xe2, 0x83, 0x25, 0x2a, 0x88,
	0x0f, 0x29, 0x6c, 0x5f, 0x2a, 0x0a, 0xd2, 0x15, 0x59, 0x17, 0xfa, 0x50, 0x62, 0x7d, 0x96, 0x49,
	0x72, 0xbb, 0x0c, 0x36, 0x33, 0x71, 0x66, 0xb2, 0xda, 0xef, 0xe1, 0xf7, 0xf0, 0x2b, 0xca, 0xfc,
	0xc9, 0xee, 0x46, 0x88, 0x20, 0xf8, 0x36, 0x67, 0xe6, 0x9c, 0x7b, 0x2e, 0xfc, 0x06, 0x0e, 0x68,
	0xcb, 0xf2, 0x56, 0x0a, 0x2d, 0x48, 0x40, 0x5b, 0x96, 0x3e, 0x59, 0x0b, 0xb1, 0xbe, 0xc5, 0x53,
	0x7b, 0x55, 0x76, 0x37, 0xa7, 0xd8, 0xb4, 0xfa, 0xce, 0x39, 0xd2, 0xa7, 0x7f, 0x3e, 0x6a, 0xd6,
	0xa0, 0xd2, 0xb4, 0x69, 0x9d, 0x21, 0x7b, 0x07, 0xf1, 0xa5, 0x58, 0x33, 0x5e, 0xe0, 0x37, 0xf2,
	0x18, 0xa2, 0x4e, 0xa1, 0xfc, 0xc2, 0xea, 0xd9, 0xe4, 0x64, 0xf2, 0xf2, 0xa0, 0x08, 0x8d, 0x5c,
	0xd5, 0x24, 0x85, 0xb8, 0xa5, 0x4a, 0x7d, 0x17, 0xb2, 0x9e, 0xdd, 0xb3, 0x2f, 0x5b, 0x9d, 0x9d,
	0x6c, 0x07, 0x28, 0x72, 0x04, 0x53, 0x2d, 0xbe, 0x22, 0xf7, 0x71, 0x27, 0xb2, 0x37, 0x90, 0x5c,
	0xd4, 0xf5, 0x8a, 0x6f, 0x04, 0xab, 0xd0, 0xf4, 0x10, 0xb8, 0xdf, 0x60, 0x23, 0xbc, 0xcb, 0x9e,
	0xc9, 0x31, 0x84, 0xb4, 0x11, 0x1d, 0xd7, 0xb6, 0x20, 0x29, 0xbc, 0xca, 0x2e, 0x20, 0xb9, 0xa2,
	0x77, 0x7b, 0xe1, 0x19, 0x44, 0xcc, 0x29, 0x9f, 0xef, 0xe5, 0xe8, 0x88, 0x29, 0x04, 0x0b, 0x5d,
	0x65, 0x0f, 0xe0, 0xf0, 0x5a, 0x52, 0xae, 0x68, 0xa5, 0x99, 0xe0, 0x2a, 0x7b, 0x06, 0xd1, 0x82,
	0xde, 0x52, 0x5e, 0xa1, 0x99, 0x59, 0xba, 0xa3, 0x9d, 0x99, 0x14, 0xbd, 0xcc, 0x9e, 0x43, 0xec,
	0xbb, 0xd5, 0xb0, 0x39, 0xd8, 0x6b, 0x9e, 0xff, 0x9a, 0x40, 0x72, 0xc9, 0xeb, 0x8f, 0x5d, 0xf9,
	0x09, 0xe5, 0xc6, 0xec, 0xf2, 0x1a, 0xa2, 0x25, 0xea, 0x15, 0xbf, 0x11, 0xe4, 0x38, 0x77, 0x0c,
	0xf2, 0x9e, 0x41, 0xfe, 0xc1, 0x00, 0x4a, 0x47, 0xee, 0xc9, 0x5b, 0x80, 0xf7, 0x12, 0xa9, 0xc6,
	0xcf, 0x0a, 0xe5, 0x3f, 0xa7, 0x5f, 0xc0, 0xd4, 0xe2, 0x20, 0x49, 0x6e, 0xfe, 0x49, 0xcf, 0x36,
	0x1d, 0x48, 0x35, 0xff, 0x19, 0xc0, 0x91, 0xdb, 0xf8, 0x4a, 0xb2, 0x0d, 0xd5, 0xf8, 0x1f, 0x16,
	0x3f, 0x07, 0xd8, 0x71, 0x26, 0xc4, 0x16, 0x0e, 0xc0, 0xff, 0x2d, 0xb9, 0x83, 0xec, 0x93, 0x03,
	0xea, 0xa3, 0xc9, 0x57, 0x10, 0x2e, 0x51, 0x2f, 0x74, 0x35, 0xba, 0x6d, 0x6c, 0xa7, 0x19, 0xc7,
	0x1c, 0xc0, 0x78, 0x3d, 0xf3, 0x31, 0xff, 0xa1, 0xf3, 0x7b, 0xd7, 0x99, 0x9d, 0x7f, 0xfd, 0x43,
	0x8d, 0xfa, 0x1f, 0x59, 0xff, 0xfe, 0xcf, 0x22, 0xe7, 0xf0, 0x70, 0x89, 0xda, 0xe0, 0xdb, 0xfe,
	0x9d, 0xb1, 0xb4, 0xc3, 0xd2, 0xdb, 0xca, 0xd0, 0x3e, 0x9f, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0xed, 0x10, 0x80, 0x3f, 0xe4, 0x03, 0x00, 0x00,
}
